name: Test Project

on: [push, workflow_dispatch]

jobs:
  test:
    env:
      PORT: 5000
    runs-on: macos-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3

      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache dependenci
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('package-lock.json') }}
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit !='true'
        run: npm ci
      - name: Run server
        run: npm start & npx wait -on http://127.0.0.1:$PORT
      - name: Test code
        id: run-tests
        run: npm run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
  build:
    needs: test
    runs-on: macos-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3

      - name: Cache dependenci
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('package-lock.json') }}
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit !='true'
        run: npm ci
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: dist
          # path: |
          #   dist
          #   package.json

  deploy:
    needs: build
    runs-on: macos-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3

      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Cache dependenci
        id: cache
        uses: actions/cache@v3
        with:
          path: node_modules
          key: deps-node-modules-${{ hashFiles('package-lock.json') }}
      - name: Install Dependencies
        if: steps.cache.outputs.cache-hit !='true'
        run: npm ci

      - name: Build project
        run: npm run build
      - name: Get build artifacts
        uses: actions/dowmload-artifact@v3
        with:
          name: dist-files
      - name: Output contents
        run: ls
      - name: Deploy
        run: echo "Deployment ..."
  report:
    needs: [test, build, deploy]
    if: failure()
    runs-on: macos-latest
    steps:
      - name: Output information
        run: |
          echo "something  went wrong "
          echo "${{ github }}"
